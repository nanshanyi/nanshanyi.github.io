<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[iOS原生方法实现二维码生成与扫描]]></title>
      <url>http://nanshanyi.github.io/2016/05/10/qrcode/</url>
      <content type="html"><![CDATA[<p>&#x4E8C;&#x7EF4;&#x7801;&#x7684;&#x751F;&#x6210;&#x6709;&#x597D;&#x591A;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#xFF0C;&#x5982;Z-Xing&#x3002;&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x63A7;&#x5236;&#x5B89;&#x88C5;&#x5305;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x6216;&#x8005;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x5176;&#x4ED6;&#x7684;&#x4E00;&#x4E9B;&#x989D;&#x5916;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x7528;&#x7CFB;&#x7EDF;&#x7684;&#x65B9;&#x6CD5;&#x5373;&#x53EF;&#x6EE1;&#x8DB3;.</p>
<h3 id="&#x4E8C;&#x7EF4;&#x7801;&#x7684;&#x751F;&#x6210;"><a href="#&#x4E8C;&#x7EF4;&#x7801;&#x7684;&#x751F;&#x6210;" class="headerlink" title="&#x4E8C;&#x7EF4;&#x7801;&#x7684;&#x751F;&#x6210;"></a>&#x4E8C;&#x7EF4;&#x7801;&#x7684;&#x751F;&#x6210;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">- (UIImage *)createNonInterpolatedUIImageFormCIImage:(CIImage *)image withSize:(CGFloat) size waterImageSize:(CGFloat)waterImagesize{</span><br><span class="line">    CGRect extent = CGRectIntegral(image.extent);</span><br><span class="line">    CGFloat scale = MIN(size/CGRectGetWidth(extent), size/CGRectGetHeight(extent));</span><br><span class="line"></span><br><span class="line">    // 1.&#x521B;&#x5EFA;bitmap;</span><br><span class="line">    size_t width = CGRectGetWidth(extent) * scale;</span><br><span class="line">    size_t height = CGRectGetHeight(extent) * scale;</span><br><span class="line">    //&#x521B;&#x5EFA;&#x4E00;&#x4E2A;DeviceGray&#x989C;&#x8272;&#x7A7A;&#x95F4;</span><br><span class="line">    CGColorSpaceRef cs = CGColorSpaceCreateDeviceGray();</span><br><span class="line">    //CGBitmapContextCreate(void * _Nullable data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef  _Nullable space, uint32_t bitmapInfo)</span><br><span class="line">    //width&#xFF1A;&#x56FE;&#x7247;&#x5BBD;&#x5EA6;&#x50CF;&#x7D20;</span><br><span class="line">    //height&#xFF1A;&#x56FE;&#x7247;&#x9AD8;&#x5EA6;&#x50CF;&#x7D20;</span><br><span class="line">    //bitsPerComponent&#xFF1A;&#x6BCF;&#x4E2A;&#x989C;&#x8272;&#x7684;&#x6BD4;&#x7279;&#x503C;&#xFF0C;&#x4F8B;&#x5982;&#x5728;rgba-32&#x6A21;&#x5F0F;&#x4E0B;&#x4E3A;8</span><br><span class="line">    //bitmapInfo&#xFF1A;&#x6307;&#x5B9A;&#x7684;&#x4F4D;&#x56FE;&#x5E94;&#x8BE5;&#x5305;&#x542B;&#x4E00;&#x4E2A;alpha&#x901A;&#x9053;&#x3002;</span><br><span class="line">    CGContextRef bitmapRef = CGBitmapContextCreate(nil, width, height, 8, 0, cs, (CGBitmapInfo)kCGImageAlphaNone);</span><br><span class="line">    CIContext *context = [CIContext contextWithOptions:nil];</span><br><span class="line">    //&#x521B;&#x5EFA;CoreGraphics image</span><br><span class="line">    CGImageRef bitmapImage = [context createCGImage:image fromRect:extent];</span><br><span class="line"></span><br><span class="line">    CGContextSetInterpolationQuality(bitmapRef, kCGInterpolationNone);</span><br><span class="line">    CGContextScaleCTM(bitmapRef, scale, scale);</span><br><span class="line">    CGContextDrawImage(bitmapRef, extent, bitmapImage);</span><br><span class="line"></span><br><span class="line">    // 2.&#x4FDD;&#x5B58;bitmap&#x5230;&#x56FE;&#x7247;</span><br><span class="line">    CGImageRef scaledImage = CGBitmapContextCreateImage(bitmapRef);</span><br><span class="line">    CGContextRelease(bitmapRef); CGImageRelease(bitmapImage);</span><br><span class="line"></span><br><span class="line">    //&#x539F;&#x56FE;</span><br><span class="line">    UIImage *outputImage = [UIImage imageWithCGImage:scaledImage];</span><br><span class="line">    //&#x7ED9;&#x4E8C;&#x7EF4;&#x7801;&#x52A0; logo &#x56FE;</span><br><span class="line">    UIGraphicsBeginImageContextWithOptions(outputImage.size, NO, [[UIScreen mainScreen] scale]);</span><br><span class="line">    [outputImage drawInRect:CGRectMake(0,0 , size, size)];</span><br><span class="line">    //logo&#x56FE;</span><br><span class="line">    UIImage *waterimage = [UIImage imageNamed:@&quot;icon_imgApp&quot;];</span><br><span class="line">    //&#x628A;logo&#x56FE;&#x753B;&#x5230;&#x751F;&#x6210;&#x7684;&#x4E8C;&#x7EF4;&#x7801;&#x56FE;&#x7247;&#x4E0A;&#xFF0C;&#x6CE8;&#x610F;&#x5C3A;&#x5BF8;&#x4E0D;&#x8981;&#x592A;&#x5927;&#xFF08;&#x6700;&#x5927;&#x4E0D;&#x8D85;&#x8FC7;&#x4E8C;&#x7EF4;&#x7801;&#x56FE;&#x7247;&#x7684;%30&#xFF09;&#xFF0C;&#x592A;&#x5927;&#x4F1A;&#x9020;&#x6210;&#x626B;&#x4E0D;&#x51FA;&#x6765;</span><br><span class="line">    [waterimage drawInRect:CGRectMake((size-waterImagesize)/2.0, (size-waterImagesize)/2.0, waterImagesize, waterImagesize)];</span><br><span class="line">    UIImage *newPic = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">    UIGraphicsEndImageContext();</span><br><span class="line">    return newPic;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="&#x8FD9;&#x4E2A;&#x662F;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x5BF9;inputMessage&#x548C;inputCorrectionLevel&#x7684;&#x89E3;&#x91CA;"><a href="#&#x8FD9;&#x4E2A;&#x662F;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x5BF9;inputMessage&#x548C;inputCorrectionLevel&#x7684;&#x89E3;&#x91CA;" class="headerlink" title="&#x8FD9;&#x4E2A;&#x662F;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x5BF9;inputMessage&#x548C;inputCorrectionLevel&#x7684;&#x89E3;&#x91CA;"></a>&#x8FD9;&#x4E2A;&#x662F;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x5BF9;inputMessage&#x548C;inputCorrectionLevel&#x7684;&#x89E3;&#x91CA;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  [CIQRCodeGenerator ](https://developer.apple.com/library/ios/documentation/GraphicsImaging/Reference/CoreImageFilterReference/#//apple_ref/doc/filter/ci/CIQRCodeGenerator)</span><br><span class="line"></span><br><span class="line">Generates a Quick Response code (two-dimensional barcode) from input data.</span><br><span class="line">Parameters</span><br><span class="line">*inputMessage*</span><br><span class="line">The data to be encoded as a QR code. AnNSData</span><br><span class="line">object whose display name is Message.</span><br><span class="line"></span><br><span class="line">*inputCorrectionLevel*</span><br><span class="line">A single letter specifying the error correction format. AnNSString</span><br><span class="line">object whose display name is CorrectionLevel.</span><br><span class="line">Default value:M</span><br><span class="line"></span><br><span class="line">Discussion</span><br><span class="line">    Generates an output image representing the input data according to the ISO/IEC 18004:2006 standard. The width and height of each module (square dot) of the code in the output image is one point. To create a QR code from a string or URL, convert it to an[NSData](https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSData_Class/index.html#//apple_ref/occ/cl/NSData)object using the[NSISOLatin1StringEncoding](https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/index.html#//apple_ref/c/econst/NSISOLatin1StringEncoding)string encoding.</span><br><span class="line">The*inputCorrectionLevel*</span><br><span class="line">&#x3000;&#x3000;parameter controls the amount of additional data encoded in the output image to provide error correction. Higher levels of error correction result in larger output images but allow larger areas of the code to be damaged or obscured without. There are four possible correction modes (with corresponding error resilience levels):</span><br><span class="line">L&#x3000;: 7%</span><br><span class="line">M&#x3000;: 15%</span><br><span class="line">Q&#x3000;: 25%</span><br><span class="line">H&#x3000;: 30%</span><br><span class="line"></span><br><span class="line">Member Of</span><br><span class="line">CICategoryBuiltIn</span><br><span class="line">,CICategoryStillImage</span><br><span class="line">,CICategoryGenerator</span><br><span class="line">Sample Output</span><br><span class="line"> **Figure 91**The result of using the CIQRCodeGenerator filter ![image: ../Art/CIQRCodeGenerator.pdf](https://developer.apple.com/library/ios/documentation/GraphicsImaging/Reference/CoreImageFilterReference/Art/CIQRCodeGenerator_2x.png)</span><br></pre></td></tr></table></figure>
<p>&#x3000;&#x3000;&#x4FEE;&#x6539;&#x4E8C;&#x7EF4;&#x7801;&#x7684;&#x989C;&#x8272;,&#x8FD9;&#x4E00;&#x6BB5;&#x662F;&#x5728;&#x7F51;&#x4E0A;&#x627E;&#x7684;&#xFF0C;&#x628A;&#x751F;&#x6210;&#x7684;&#x4E8C;&#x7EF4;&#x7801;&#x56FE;&#x7247;&#x4F20;&#x5165;&#xFF0C;&#x518D;&#x4F20;&#x5165;&#x60F3;&#x8981;&#x7684;&#x989C;&#x8272;&#x5373;&#x53EF;<br>&#x3000;&#x3000;&#x56FE;&#x7247;&#x8981;&#x4F20;&#x6CA1;&#x6709;&#x52A0;&#x8FC7; logo &#x7684;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">- (UIImage*)imageBlackToTransparent:(UIImage*)image withRed:(CGFloat)red andGreen:(CGFloat)green andBlue:(CGFloat)blue{</span><br><span class="line">    const int imageWidth = image.size.width;</span><br><span class="line">    const int imageHeight = image.size.height;</span><br><span class="line">    size_t bytesPerRow = imageWidth * 4;</span><br><span class="line">    uint32_t* rgbImageBuf = (uint32_t*)malloc(bytesPerRow * imageHeight);</span><br><span class="line">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</span><br><span class="line">    CGContextRef context = CGBitmapContextCreate(rgbImageBuf, imageWidth, imageHeight, 8, bytesPerRow, colorSpace, kCGBitmapByteOrder32Little | kCGImageAlphaNoneSkipLast);</span><br><span class="line">    CGContextDrawImage(context, CGRectMake(0, 0, imageWidth, imageHeight), image.CGImage); // &#x904D;&#x5386;&#x50CF;&#x7D20;</span><br><span class="line">    int pixelNum = imageWidth * imageHeight;</span><br><span class="line">    uint32_t* pCurPtr = rgbImageBuf;</span><br><span class="line">    for (int i = 0; i &lt; pixelNum; i++, pCurPtr++){</span><br><span class="line">        if ((*pCurPtr &amp; 0xFFFFFF00) &lt; 0x99999900) // &#x5C06;&#x767D;&#x8272;&#x53D8;&#x6210;&#x900F;&#x660E;</span><br><span class="line">    {</span><br><span class="line">        // &#x6539;&#x6210;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F1A;&#x5C06;&#x56FE;&#x7247;&#x8F6C;&#x6210;&#x60F3;&#x8981;&#x7684;&#x989C;&#x8272;</span><br><span class="line">        uint8_t* ptr = (uint8_t*)pCurPtr;</span><br><span class="line">        ptr[3] = red; //0~255</span><br><span class="line">        ptr[2] = green;</span><br><span class="line">        ptr[1] = blue;</span><br><span class="line">    } else {</span><br><span class="line">        uint8_t* ptr = (uint8_t*)pCurPtr;</span><br><span class="line">        ptr[0] = 0;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    // &#x8F93;&#x51FA;&#x56FE;&#x7247;</span><br><span class="line">    CGDataProviderRef dataProvider = CGDataProviderCreateWithData(NULL, rgbImageBuf, bytesPerRow * imageHeight, nil);</span><br><span class="line">    CGImageRef imageRef = CGImageCreate(imageWidth, imageHeight, 8, 32, bytesPerRow, colorSpace, kCGImageAlphaLast | kCGBitmapByteOrder32Little, dataProvider, NULL, true, kCGRenderingIntentDefault);</span><br><span class="line">    CGDataProviderRelease(dataProvider);</span><br><span class="line">    UIImage* resultUIImage = [UIImage imageWithCGImage:imageRef]; // &#x6E05;&#x7406;&#x7A7A;&#x95F4;</span><br><span class="line">    CGImageRelease(imageRef);</span><br><span class="line">    CGContextRelease(context);</span><br><span class="line">    CGColorSpaceRelease(colorSpace);</span><br><span class="line">    return resultUIImage;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h3 id="&#x626B;&#x7801;"><a href="#&#x626B;&#x7801;" class="headerlink" title="&#x626B;&#x7801;"></a>&#x626B;&#x7801;</h3><p>&#x3000;&#x3000;&#x626B;&#x7801;&#x4E3B;&#x8981;&#x7528;&#x5230;&#x7684;&#x662F;AVFoundation&#x7528;&#x5230;&#x7684;&#x4E1C;&#x897F;&#x548C;&#x76F8;&#x673A;&#x57FA;&#x672C;&#x76F8;&#x540C;&#xFF0C;&#x76F8;&#x673A;&#x8BF7;&#x53C2;&#x8003;&#x6211;&#x7684;&#x53E6;&#x5916;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;<br><img src="http://upload-images.jianshu.io/upload_images/966908-4540ac0268f17202.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="&#x5C4F;&#x5E55;&#x5FEB;&#x7167; 2016-04-11 &#x4E0A;&#x5348;11.46.38.png"></p>
<h4 id="&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;&#xFF0C;&#x9075;&#x5B88;AVCaptureMetadataOutputObjectsDelegate"><a href="#&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;&#xFF0C;&#x9075;&#x5B88;AVCaptureMetadataOutputObjectsDelegate" class="headerlink" title="&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;&#xFF0C;&#x9075;&#x5B88;AVCaptureMetadataOutputObjectsDelegate"></a>&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;&#xFF0C;&#x9075;&#x5B88;AVCaptureMetadataOutputObjectsDelegate</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@interface ScanQRViewController ()&lt;AVCaptureMetadataOutputObjectsDelegate&gt;</span><br><span class="line">//&#x6355;&#x83B7;&#x8BBE;&#x5907;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x524D;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#xFF0C;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#xFF0C;&#x9EA6;&#x514B;&#x98CE;&#xFF08;&#x97F3;&#x9891;&#x8F93;&#x5165;&#xFF09;</span><br><span class="line">@property(nonatomic)AVCaptureDevice *device;</span><br><span class="line"></span><br><span class="line">//AVCaptureDeviceInput &#x4EE3;&#x8868;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#xFF0C;&#x4ED6;&#x4F7F;&#x7528;AVCaptureDevice &#x6765;&#x521D;&#x59CB;&#x5316;</span><br><span class="line">@property(nonatomic)AVCaptureDeviceInput *input;</span><br><span class="line"></span><br><span class="line">//&#x8BBE;&#x7F6E;&#x8F93;&#x51FA;&#x7C7B;&#x578B;&#x4E3A;Metadata&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x79CD;&#x8F93;&#x51FA;&#x7C7B;&#x578B;&#x4E2D;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x626B;&#x63CF;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x8B6C;&#x5982;&#x4E8C;&#x7EF4;&#x7801;</span><br><span class="line">//&#x5F53;&#x542F;&#x52A8;&#x6444;&#x50CF;&#x5934;&#x5F00;&#x59CB;&#x6355;&#x83B7;&#x8F93;&#x5165;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x4E2D;&#x5305;&#x542B;&#x4E8C;&#x7EF4;&#x7801;&#xFF0C;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;&#x8F93;&#x51FA;</span><br><span class="line">@property(nonatomic)AVCaptureMetadataOutput *output;</span><br><span class="line"></span><br><span class="line">//session&#xFF1A;&#x7531;&#x4ED6;&#x628A;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x5E76;&#x5F00;&#x59CB;&#x542F;&#x52A8;&#x6355;&#x83B7;&#x8BBE;&#x5907;&#xFF08;&#x6444;&#x50CF;&#x5934;&#xFF09;</span><br><span class="line">@property(nonatomic)AVCaptureSession *session;</span><br><span class="line"></span><br><span class="line">//&#x56FE;&#x50CF;&#x9884;&#x89C8;&#x5C42;&#xFF0C;&#x5B9E;&#x65F6;&#x663E;&#x793A;&#x6355;&#x83B7;&#x7684;&#x56FE;&#x50CF;</span><br><span class="line">@property(nonatomic)AVCaptureVideoPreviewLayer *previewLayer;</span><br></pre></td></tr></table></figure>
<h4 id="&#x521D;&#x59CB;&#x5316;&#x5404;&#x5BF9;&#x8C61;&#xFF0C;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x7ED3;&#x5408;"><a href="#&#x521D;&#x59CB;&#x5316;&#x5404;&#x5BF9;&#x8C61;&#xFF0C;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x7ED3;&#x5408;" class="headerlink" title="&#x521D;&#x59CB;&#x5316;&#x5404;&#x5BF9;&#x8C61;&#xFF0C;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x7ED3;&#x5408;"></a>&#x521D;&#x59CB;&#x5316;&#x5404;&#x5BF9;&#x8C61;&#xFF0C;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x7ED3;&#x5408;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">- (void)creatCaptureDevice{</span><br><span class="line">    //&#x4F7F;&#x7528;AVMediaTypeVideo &#x6307;&#x660E;self.device&#x4EE3;&#x8868;&#x89C6;&#x9891;&#xFF0C;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;</span><br><span class="line">    self.device = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];</span><br><span class="line"></span><br><span class="line">    //&#x4F7F;&#x7528;&#x8BBE;&#x5907;&#x521D;&#x59CB;&#x5316;&#x8F93;&#x5165;</span><br><span class="line">    self.input = [[AVCaptureDeviceInput alloc]initWithDevice:self.device error:nil];</span><br><span class="line"></span><br><span class="line">    //&#x751F;&#x6210;&#x8F93;&#x51FA;&#x5BF9;&#x8C61;</span><br><span class="line">    self.output = [[AVCaptureMetadataOutput alloc]init];</span><br><span class="line"></span><br><span class="line">    //&#x8BBE;&#x7F6E;&#x4EE3;&#x7406;&#xFF0C;&#x4E00;&#x65E6;&#x626B;&#x63CF;&#x5230;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5C31;&#x4F1A;&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x8F93;&#x51FA;</span><br><span class="line">    //&#x5728;&#x626B;&#x63CF;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x5206;&#x6790;&#x626B;&#x63CF;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5206;&#x6790;&#x6210;&#x529F;&#x540E;&#x5C31;&#x4F1A;&#x8C03;&#x7528;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;&#x5728;&#x961F;&#x5217;&#x4E2D;&#x8F93;&#x51FA;</span><br><span class="line">    [self.output setMetadataObjectsDelegate:self queue:dispatch_get_main_queue()];</span><br><span class="line"></span><br><span class="line">    //&#x751F;&#x6210;&#x4F1A;&#x8BDD;&#xFF0C;&#x7528;&#x6765;&#x7ED3;&#x5408;&#x8F93;&#x5165;&#x8F93;&#x51FA;</span><br><span class="line">    self.session = [[AVCaptureSession alloc]init];</span><br><span class="line">    if ([self.session canAddInput:self.input]) {</span><br><span class="line">        [self.session addInput:self.input];</span><br><span class="line">    }</span><br><span class="line">    if ([self.session canAddOutput:self.output]) {</span><br><span class="line">        [self.session addOutput:self.output];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    //&#x6307;&#x5B9A;&#x5F53;&#x626B;&#x63CF;&#x5230;&#x4E8C;&#x7EF4;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4EA7;&#x751F;&#x8F93;&#x51FA;</span><br><span class="line">    //AVMetadataObjectTypeQRCode &#x6307;&#x5B9A;&#x4E8C;&#x7EF4;&#x7801;</span><br><span class="line">    //&#x6307;&#x5B9A;&#x8BC6;&#x522B;&#x7C7B;&#x578B;&#x4E00;&#x5B9A;&#x8981;&#x653E;&#x5230;&#x6DFB;&#x52A0;&#x5230;session&#x4E4B;&#x540E;</span><br><span class="line">    [self.output setMetadataObjectTypes:@[AVMetadataObjectTypeQRCode]];</span><br><span class="line">//&#x8BBE;&#x7F6E;&#x626B;&#x63CF;&#x4FE1;&#x606F;&#x7684;&#x8BC6;&#x522B;&#x533A;&#x57DF;&#xFF0C;&#x5DE6;&#x4E0A;&#x89D2;&#x4E3A;(0,0),&#x53F3;&#x4E0B;&#x89D2;&#x4E3A;(1,1),&#x4E0D;&#x8BBE;&#x7684;&#x8BDD;&#x5168;&#x5C4F;&#x90FD;&#x53EF;&#x4EE5;&#x8BC6;&#x522B;&#x3002;&#x8BBE;&#x7F6E;&#x8FC7;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x7F29;&#x5C0F;&#x4FE1;&#x606F;&#x626B;&#x63CF;&#x9762;&#x79EF;&#x52A0;&#x5FEB;&#x8BC6;&#x522B;&#x901F;&#x5EA6;&#x3002;</span><br><span class="line">//&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x5E76;&#x4E0D;&#x597D;&#x8BBE;&#x7F6E;&#xFF0C;&#x6574;&#x4E86;&#x534A;&#x5929;&#x4E5F;&#x6CA1;&#x592A;&#x641E;&#x660E;&#x767D;&#xFF0C;&#x5230;&#x5E95;x,y,width,height,&#x600E;&#x4E48;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x4E00;&#x70B9;&#x4E00;&#x70B9;&#x8BD5;&#x7684;&#x626B;&#x63CF;&#x533A;&#x57DF;&#xFF0C;&#x770B;&#x4E0D;&#x5230;&#x53EA;&#x80FD;&#x8C03;&#x4E00;&#x4E0B;&#xFF0C;&#x626B;&#x4E00;&#x626B;&#x8BD5;&#x8BD5;</span><br><span class="line">    [self.output setRectOfInterest:CGRectMake(0.1 ,0.3 , 0.4, 0.4)];</span><br><span class="line">    //&#x4F7F;&#x7528;self.session&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x9884;&#x89C8;&#x5C42;&#xFF0C;self.session&#x8D1F;&#x8D23;&#x9A71;&#x52A8;input&#x8FDB;&#x884C;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x96C6;&#xFF0C;layer&#x8D1F;&#x8D23;&#x628A;&#x56FE;&#x50CF;&#x6E32;&#x67D3;&#x663E;&#x793A;</span><br><span class="line">    self.previewLayer = [[AVCaptureVideoPreviewLayer alloc]initWithSession:self.session];</span><br><span class="line">    self.previewLayer.frame = CGRectMake(0, 0, kScreenWidth , kScreenHeight);</span><br><span class="line">    self.previewLayer.videoGravity = AVLayerVideoGravityResizeAspectFill;</span><br><span class="line">    [self.view.layer addSublayer:self.previewLayer];</span><br><span class="line"></span><br><span class="line">    //&#x5F00;&#x59CB;&#x542F;&#x52A8;</span><br><span class="line">    [self.session startRunning];</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="&#x5B9E;&#x73B0;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;"><a href="#&#x5B9E;&#x73B0;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;" class="headerlink" title="&#x5B9E;&#x73B0;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;"></a>&#x5B9E;&#x73B0;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark &#x8F93;&#x51FA;&#x7684;&#x4EE3;&#x7406;</span><br><span class="line">//metadataObjects &#xFF1A;&#x628A;&#x8BC6;&#x522B;&#x5230;&#x7684;&#x5185;&#x5BB9;&#x653E;&#x5230;&#x8BE5;&#x6570;&#x7EC4;&#x4E2D;</span><br><span class="line">- (void)captureOutput:(AVCaptureOutput *)captureOutput didOutputMetadataObjects:(NSArray *)metadataObjects fromConnection:(AVCaptureConnection *)connection</span><br><span class="line">{</span><br><span class="line">    //&#x505C;&#x6B62;&#x626B;&#x63CF;</span><br><span class="line">    [self.session stopRunning];</span><br><span class="line">    [self.timer invalidate];</span><br><span class="line">    self.timer = nil;</span><br><span class="line">    [self.lineView removeFromSuperview];</span><br><span class="line">    if ([metadataObjects count] &gt;= 1) {</span><br><span class="line">        //&#x6570;&#x7EC4;&#x4E2D;&#x5305;&#x542B;&#x7684;&#x90FD;&#x662F;AVMetadataMachineReadableCodeObject &#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x4E2D;&#x5305;&#x542B;&#x89E3;&#x7801;&#x540E;&#x7684;&#x6570;&#x636E;</span><br><span class="line">        AVMetadataMachineReadableCodeObject *qrObject = [metadataObjects lastObject];</span><br><span class="line">        &#x62FF;&#x5230;&#x626B;&#x63CF;&#x5185;&#x5BB9;&#x5728;&#x8FD9;&#x91CC;&#x8FDB;&#x884C;&#x4E2A;&#x6027;&#x5316;&#x5904;&#x7406;</span><br><span class="line">        NSLog(@&quot;&#x8BC6;&#x522B;&#x6210;&#x529F;%@&quot;,qrObject.stringValue);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h3 id="&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;"><a href="#&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;" class="headerlink" title="&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;"></a>&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;</h3><p>&#xFF08;1&#xFF09;&#x4E8C;&#x7EF4;&#x7801;&#x4E0A;&#x52A0;logo&#x56FE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56FE;&#x7247;&#x5F88;&#x6A21;&#x7CCA;&#xFF0C;&#x8FD9;&#x662F;&#x7531;&#x4E8E;UIGraphicsBeginImageContextWithOptions&#x91CC;&#x7684; scale &#x9020;&#x6210;&#x7684;&#xFF0C;&#x7531;&#x4E8E; iPhone &#x7684;&#x5C4F;&#x5E55;&#x90FD;&#x662F;retina&#x5C4F;&#x5E55;&#xFF0C;&#x90FD;&#x662F;2&#x500D;&#xFF0C;3&#x500D;&#x50CF;&#x7D20;&#xFF0C;&#x8FD9;&#x91CC;&#x7684; scale &#x8981;&#x6839;&#x636E;&#x5C4F;&#x5E55;&#x6765;&#x8BBE;&#x7F6E; &#x5373;[[UIScreen mainScreen] scale]&#x8FD9;&#x6837;&#x56FE;&#x7247;&#x5C31;&#x4F1A;&#x5F88;&#x6E05;&#x6670;<br>&#xFF08;2&#xFF09;setRectOfInterest&#xFF1A;&#x8BBE;&#x7F6E;&#x626B;&#x63CF;&#x4FE1;&#x606F;&#x7684;&#x8BC6;&#x522B;&#x533A;&#x57DF;&#xFF0C;&#x5DE6;&#x4E0A;&#x89D2;&#x4E3A;(0,0),&#x53F3;&#x4E0B;&#x89D2;&#x4E3A;(1,1),&#x4E0D;&#x8BBE;&#x7684;&#x8BDD;&#x5168;&#x5C4F;&#x90FD;&#x53EF;&#x4EE5;&#x8BC6;&#x522B;&#x3002;&#x8BBE;&#x7F6E;&#x8FC7;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x7F29;&#x5C0F;&#x4FE1;&#x606F;&#x626B;&#x63CF;&#x9762;&#x79EF;&#x52A0;&#x5FEB;&#x8BC6;&#x522B;&#x901F;&#x5EA6;&#xFF0C;&#x539F;&#x6765;&#x626B;&#x63CF;&#x7684;&#x662F;&#x6574;&#x4E2A;&#x5C4F;&#x5E55;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x53EA;&#x626B;&#x63CF;&#x4E00;&#x5757;&#x533A;&#x57DF;&#xFF0C;&#x4EE5;&#x6B64;&#x52A0;&#x5FEB;&#x8BC6;&#x522B;&#x901F;&#x5EA6;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x5E76;&#x4E0D;&#x597D;&#x8BBE;&#x7F6E;&#xFF0C;&#x6574;&#x4E86;&#x534A;&#x5929;&#x4E5F;&#x6CA1;&#x592A;&#x641E;&#x660E;&#x767D;&#xFF0C;&#x5230;&#x5E95;x,y,width,height,&#x600E;&#x4E48;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x662F;&#x6BD4;&#x4F8B;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x6211;&#x662F;&#x4E00;&#x70B9;&#x4E00;&#x70B9;&#x8BD5;&#x7684;&#x626B;&#x63CF;&#x533A;&#x57DF;&#xFF0C;&#x770B;&#x4E0D;&#x5230;&#x60C5;&#x51B5;&#xFF0C;&#x53EA;&#x80FD;&#x8C03;&#x4E00;&#x4E0B;&#xFF0C;&#x626B;&#x4E00;&#x626B;&#x8BD5;&#x8BD5;<br>&#x6700;&#x540E;&#x4E5F;&#x6CA1;&#x6574;&#x660E;&#x767D;&#xFF0C;&#x54EA;&#x4F4D;&#x5927;&#x795E;&#x77E5;&#x9053;&#xFF0C;&#x6C42;&#x89E3;&#x7B54;<br>&#x9644;&#x4E0A;&#x5B98;&#x65B9;&#x89E3;&#x91CA;:<br>    The value of this property is a CGRect that determines the receiver&#x2019;s rectangle of interest for each frame of video.<br>    The rectangle&#x2019;s origin is top left and is relative to the coordinate space of the device providing the metadata.  Specifying<br>    a rectOfInterest may improve detection performance for certain types of metadata. The default value of this property is the<br>    value CGRectMake(0, 0, 1, 1).  Metadata objects whose bounds do not intersect with the rectOfInterest will not be returned.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[30分钟搞定iOS自定义相机]]></title>
      <url>http://nanshanyi.github.io/2016/05/07/xiangji/</url>
      <content type="html"><![CDATA[<p>&#x3000;&#x3000;&#x6700;&#x8FD1;&#x516C;&#x53F8;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x7528;&#x5230;&#x4E86;&#x76F8;&#x673A;&#xFF0C;&#x7531;&#x4E8E;&#x4E0D;&#x7528;&#x7CFB;&#x7EDF;&#x7684;&#x76F8;&#x673A;&#xFF0C;UI&#x7ED9;&#x7684;&#x76F8;&#x673A;&#x5207;&#x56FE;&#xFF0C;&#x5FC5;&#x987B;&#x81EA;&#x5B9A;&#x4E49;&#x624D;&#x53EF;&#x4EE5;&#x3002;&#x5C31;&#x82B1;&#x65F6;&#x95F4;&#x7B80;&#x5355;&#x7814;&#x7A76;&#x4E86;&#x4E00;&#x4E0B;&#x76F8;&#x673A;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x3002;<br>&#x3000;&#x3000;&#x76F8;&#x673A;&#x5C5E;&#x4E8E;&#x7CFB;&#x7EDF;&#x786C;&#x4EF6;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x6765;&#x624B;&#x52A8;&#x8C03;&#x7528;iPhone&#x7684;&#x76F8;&#x673A;&#x786C;&#x4EF6;&#xFF0C;&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#x6B65;&#x9AA4;&#xFF1A;<br><a id="more"></a><br><img src="/2016/05/07/xiangji/camera.png" alt=""></p>
<h4 id="&#x9996;&#x5148;&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;"><a href="#&#x9996;&#x5148;&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;" class="headerlink" title="&#x9996;&#x5148;&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;"></a>&#x9996;&#x5148;&#x58F0;&#x660E;&#x4EE5;&#x4E0B;&#x5BF9;&#x8C61;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;AVFoundation/AVFoundation.h&gt;</span><br><span class="line">//&#x6355;&#x83B7;&#x8BBE;&#x5907;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x524D;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#xFF0C;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#xFF0C;&#x9EA6;&#x514B;&#x98CE;&#xFF08;&#x97F3;&#x9891;&#x8F93;&#x5165;&#xFF09;</span><br><span class="line">@property (nonatomic, strong) AVCaptureDevice *device;</span><br><span class="line"></span><br><span class="line">//AVCaptureDeviceInput &#x4EE3;&#x8868;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#xFF0C;&#x4ED6;&#x4F7F;&#x7528;AVCaptureDevice &#x6765;&#x521D;&#x59CB;&#x5316;</span><br><span class="line">@property (nonatomic, strong) AVCaptureDeviceInput *input;</span><br><span class="line"></span><br><span class="line">//&#x8F93;&#x51FA;&#x56FE;&#x7247;</span><br><span class="line">@property (nonatomic ,strong) AVCaptureStillImageOutput *imageOutput;</span><br><span class="line"></span><br><span class="line">//session&#xFF1A;&#x7531;&#x4ED6;&#x628A;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x5E76;&#x5F00;&#x59CB;&#x542F;&#x52A8;&#x6355;&#x83B7;&#x8BBE;&#x5907;&#xFF08;&#x6444;&#x50CF;&#x5934;&#xFF09;</span><br><span class="line">@property (nonatomic, strong) AVCaptureSession *session;</span><br><span class="line"></span><br><span class="line">//&#x56FE;&#x50CF;&#x9884;&#x89C8;&#x5C42;&#xFF0C;&#x5B9E;&#x65F6;&#x663E;&#x793A;&#x6355;&#x83B7;&#x7684;&#x56FE;&#x50CF;</span><br><span class="line">@property (nonatomic ,strong) AVCaptureVideoPreviewLayer *previewLayer;</span><br></pre></td></tr></table></figure>
<h4 id="&#x521D;&#x59CB;&#x5316;&#x5404;&#x4E2A;&#x5BF9;&#x8C61;"><a href="#&#x521D;&#x59CB;&#x5316;&#x5404;&#x4E2A;&#x5BF9;&#x8C61;" class="headerlink" title="&#x521D;&#x59CB;&#x5316;&#x5404;&#x4E2A;&#x5BF9;&#x8C61;"></a>&#x521D;&#x59CB;&#x5316;&#x5404;&#x4E2A;&#x5BF9;&#x8C61;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">- (void)cameraDistrict</span><br><span class="line">{</span><br><span class="line">//    AVCaptureDevicePositionBack  &#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;</span><br><span class="line">//    AVCaptureDevicePositionFront &#x524D;&#x7F6E;&#x6444;&#x50CF;&#x5934;</span><br><span class="line">   self.device = [self cameraWithPosition:AVCaptureDevicePositionFront];</span><br><span class="line">    self.input = [[AVCaptureDeviceInput alloc] initWithDevice:self.device error:nil];</span><br><span class="line"></span><br><span class="line">    self.imageOutput = [[AVCaptureStillImageOutput alloc] init];</span><br><span class="line"></span><br><span class="line">    self.session = [[AVCaptureSession alloc] init];</span><br><span class="line">    //     &#x62FF;&#x5230;&#x7684;&#x56FE;&#x50CF;&#x7684;&#x5927;&#x5C0F;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x8BBE;&#x5B9A;</span><br><span class="line">    //    AVCaptureSessionPreset320x240</span><br><span class="line">    //    AVCaptureSessionPreset352x288</span><br><span class="line">    //    AVCaptureSessionPreset640x480</span><br><span class="line">    //    AVCaptureSessionPreset960x540</span><br><span class="line">    //    AVCaptureSessionPreset1280x720</span><br><span class="line">    //    AVCaptureSessionPreset1920x1080</span><br><span class="line">    //    AVCaptureSessionPreset3840x2160</span><br><span class="line">    self.session.sessionPreset = AVCaptureSessionPreset640x480;</span><br><span class="line">    //&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x7ED3;&#x5408;</span><br><span class="line">    if ([self.session canAddInput:self.input]) {</span><br><span class="line">        [self.session addInput:self.input];</span><br><span class="line">    }</span><br><span class="line">    if ([self.session canAddOutput:self.imageOutput]) {</span><br><span class="line">        [self.session addOutput:self.imageOutput];</span><br><span class="line">    }</span><br><span class="line">    //&#x9884;&#x89C8;&#x5C42;&#x7684;&#x751F;&#x6210;</span><br><span class="line">    self.previewLayer = [[AVCaptureVideoPreviewLayer alloc] initWithSession:self.session];</span><br><span class="line">    self.previewLayer.frame = CGRectMake(0, 64, SCREEN_WIDTH, SCREEN_HEIGHT-64);</span><br><span class="line">    self.previewLayer.videoGravity = AVLayerVideoGravityResizeAspectFill;</span><br><span class="line">    [self.view.layer addSublayer:self.previewLayer];</span><br><span class="line">    //&#x8BBE;&#x5907;&#x53D6;&#x666F;&#x5F00;&#x59CB;</span><br><span class="line">    [self.session startRunning];</span><br><span class="line">    if ([_device lockForConfiguration:nil]) {</span><br><span class="line">    //&#x81EA;&#x52A8;&#x95EA;&#x5149;&#x706F;&#xFF0C;</span><br><span class="line">        if ([_device isFlashModeSupported:AVCaptureFlashModeAuto]) {</span><br><span class="line">            [_device setFlashMode:AVCaptureFlashModeAuto];</span><br><span class="line">        }</span><br><span class="line">        //&#x81EA;&#x52A8;&#x767D;&#x5E73;&#x8861;,&#x4F46;&#x662F;&#x597D;&#x50CF;&#x4E00;&#x76F4;&#x90FD;&#x8FDB;&#x4E0D;&#x53BB;</span><br><span class="line">        if ([_device isWhiteBalanceModeSupported:AVCaptureWhiteBalanceModeAutoWhiteBalance]) {</span><br><span class="line">            [_device setWhiteBalanceMode:AVCaptureWhiteBalanceModeAutoWhiteBalance];</span><br><span class="line">        }</span><br><span class="line">        [_device unlockForConfiguration];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>  &#x6839;&#x636E;&#x524D;&#x540E;&#x7F6E;&#x4F4D;&#x7F6E;&#x62FF;&#x5230;&#x76F8;&#x5E94;&#x7684;&#x6444;&#x50CF;&#x5934;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (AVCaptureDevice *)cameraWithPosition:(AVCaptureDevicePosition)position{</span><br><span class="line">    NSArray *devices = [AVCaptureDevice devicesWithMediaType:AVMediaTypeVideo];</span><br><span class="line">    for ( AVCaptureDevice *device in devices )</span><br><span class="line">        if ( device.position == position ){</span><br><span class="line">            return device;</span><br><span class="line">        }</span><br><span class="line">    return nil;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h4 id="&#x62CD;&#x7167;&#x62FF;&#x5230;&#x76F8;&#x5E94;&#x56FE;&#x7247;&#xFF1A;"><a href="#&#x62CD;&#x7167;&#x62FF;&#x5230;&#x76F8;&#x5E94;&#x56FE;&#x7247;&#xFF1A;" class="headerlink" title="&#x62CD;&#x7167;&#x62FF;&#x5230;&#x76F8;&#x5E94;&#x56FE;&#x7247;&#xFF1A;"></a>&#x62CD;&#x7167;&#x62FF;&#x5230;&#x76F8;&#x5E94;&#x56FE;&#x7247;&#xFF1A;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (void)photoBtnDidClick</span><br><span class="line">{</span><br><span class="line">    AVCaptureConnection *conntion = [self.imageOutput connectionWithMediaType:AVMediaTypeVideo];</span><br><span class="line">      if (!conntion) {</span><br><span class="line">          NSLog(@&quot;&#x62CD;&#x7167;&#x5931;&#x8D25;!&quot;);</span><br><span class="line">          return;</span><br><span class="line">          }</span><br><span class="line">    [self.imageOutput captureStillImageAsynchronouslyFromConnection:conntion completionHandler:^(CMSampleBufferRef imageDataSampleBuffer, NSError *error) {</span><br><span class="line">        if (imageDataSampleBuffer == nil) {</span><br><span class="line">            return ;</span><br><span class="line">          }</span><br><span class="line">        NSData *imageData = [AVCaptureStillImageOutput jpegStillImageNSDataRepresentation:imageDataSampleBuffer];</span><br><span class="line">        self.image = [UIImage imageWithData:imageData];</span><br><span class="line">        [self.session stopRunning];</span><br><span class="line">        [self.view addSubview:self.cameraImageView];</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="&#x4FDD;&#x5B58;&#x7167;&#x7247;&#x5230;&#x76F8;&#x518C;&#xFF1A;"><a href="#&#x4FDD;&#x5B58;&#x7167;&#x7247;&#x5230;&#x76F8;&#x518C;&#xFF1A;" class="headerlink" title="&#x4FDD;&#x5B58;&#x7167;&#x7247;&#x5230;&#x76F8;&#x518C;&#xFF1A;"></a>&#x4FDD;&#x5B58;&#x7167;&#x7247;&#x5230;&#x76F8;&#x518C;&#xFF1A;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#pragma - &#x4FDD;&#x5B58;&#x81F3;&#x76F8;&#x518C;</span><br><span class="line">- (void)saveImageToPhotoAlbum:(UIImage*)savedImage</span><br><span class="line">{</span><br><span class="line"></span><br><span class="line">    UIImageWriteToSavedPhotosAlbum(savedImage, self, @selector(image:didFinishSavingWithError:contextInfo:), NULL);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">// &#x6307;&#x5B9A;&#x56DE;&#x8C03;&#x65B9;&#x6CD5;</span><br><span class="line"></span><br><span class="line">- (void)image: (UIImage *) image didFinishSavingWithError: (NSError *) error contextInfo: (void *) contextInfo</span><br><span class="line"></span><br><span class="line">{</span><br><span class="line">    NSString *msg = nil ;</span><br><span class="line">    if(error != NULL){</span><br><span class="line">        msg = @&quot;&#x4FDD;&#x5B58;&#x56FE;&#x7247;&#x5931;&#x8D25;&quot; ;</span><br><span class="line">    }else{</span><br><span class="line">        msg = @&quot;&#x4FDD;&#x5B58;&#x56FE;&#x7247;&#x6210;&#x529F;&quot; ;</span><br><span class="line">    }</span><br><span class="line">    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@&quot;&#x4FDD;&#x5B58;&#x56FE;&#x7247;&#x7ED3;&#x679C;&#x63D0;&#x793A;&quot;</span><br><span class="line">                                            message:msg</span><br><span class="line">                                            delegate:self</span><br><span class="line">                                          cancelButtonTitle:@&quot;&#x786E;&#x5B9A;&quot;</span><br><span class="line">                                          otherButtonTitles:nil];</span><br><span class="line">    [alert show];</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="&#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;"><a href="#&#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;" class="headerlink" title="&#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;"></a>&#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">- (void)changeCamera{</span><br><span class="line">    NSUInteger cameraCount = [[AVCaptureDevice devicesWithMediaType:AVMediaTypeVideo] count];</span><br><span class="line">    if (cameraCount &gt; 1) {</span><br><span class="line">        NSError *error;</span><br><span class="line">        //&#x7ED9;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;&#x6DFB;&#x52A0;&#x7FFB;&#x8F6C;&#x52A8;&#x753B;</span><br><span class="line">        CATransition *animation = [CATransition animation]&#xFF1B;</span><br><span class="line">        animation.duration = .5f&#xFF1B;</span><br><span class="line">        animation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</span><br><span class="line">        animation.type = @&quot;oglFlip&quot;;</span><br><span class="line"></span><br><span class="line">        AVCaptureDevice *newCamera = nil;</span><br><span class="line">        AVCaptureDeviceInput *newInput = nil;</span><br><span class="line">  //&#x62FF;&#x5230;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x6444;&#x50CF;&#x5934;&#x4F4D;&#x7F6E;</span><br><span class="line">        AVCaptureDevicePosition position = [[_input device] position];</span><br><span class="line">        if (position == AVCaptureDevicePositionFront){</span><br><span class="line">            newCamera = [self cameraWithPosition:AVCaptureDevicePositionBack];</span><br><span class="line">            animation.subtype = kCATransitionFromLeft;//&#x52A8;&#x753B;&#x7FFB;&#x8F6C;&#x65B9;&#x5411;</span><br><span class="line">        }</span><br><span class="line">        else {</span><br><span class="line">            newCamera = [self cameraWithPosition:AVCaptureDevicePositionFront];</span><br><span class="line">            animation.subtype = kCATransitionFromRight;//&#x52A8;&#x753B;&#x7FFB;&#x8F6C;&#x65B9;&#x5411;</span><br><span class="line">        }</span><br><span class="line">        //&#x751F;&#x6210;&#x65B0;&#x7684;&#x8F93;&#x5165;</span><br><span class="line">        newInput = [AVCaptureDeviceInput deviceInputWithDevice:newCamera error:nil];</span><br><span class="line">        [self.previewLayer addAnimation:animation forKey:nil];</span><br><span class="line">        if (newInput != nil) {</span><br><span class="line">            [self.session beginConfiguration];</span><br><span class="line">            [self.session removeInput:self.input];</span><br><span class="line">            if ([self.session canAddInput:newInput]) {</span><br><span class="line">                [self.session addInput:newInput];</span><br><span class="line">                self.input = newInput;</span><br><span class="line"></span><br><span class="line">            } else {</span><br><span class="line">                [self.session addInput:self.input];</span><br><span class="line">            }</span><br><span class="line">            [self.session commitConfiguration];</span><br><span class="line"></span><br><span class="line">        } else if (error) {</span><br><span class="line">            NSLog(@&quot;toggle carema failed, error = %@&quot;, error);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="&#x76F8;&#x673A;&#x7684;&#x5176;&#x5B83;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;"><a href="#&#x76F8;&#x673A;&#x7684;&#x5176;&#x5B83;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;" class="headerlink" title="&#x76F8;&#x673A;&#x7684;&#x5176;&#x5B83;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;"></a>&#x76F8;&#x673A;&#x7684;&#x5176;&#x5B83;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;</h4><pre><code>//AVCaptureFlashMode  &#x95EA;&#x5149;&#x706F;
//AVCaptureFocusMode  &#x5BF9;&#x7126;
//AVCaptureExposureMode  &#x66DD;&#x5149;
//AVCaptureWhiteBalanceMode  &#x767D;&#x5E73;&#x8861;
//&#x95EA;&#x5149;&#x706F;&#x548C;&#x767D;&#x5E73;&#x8861;&#x53EF;&#x4EE5;&#x5728;&#x751F;&#x6210;&#x76F8;&#x673A;&#x65F6;&#x5019;&#x8BBE;&#x7F6E;
//&#x66DD;&#x5149;&#x8981;&#x6839;&#x636E;&#x5BF9;&#x7126;&#x70B9;&#x7684;&#x5149;&#x7EBF;&#x72B6;&#x51B5;&#x800C;&#x51B3;&#x5B9A;,&#x6240;&#x4EE5;&#x548C;&#x5BF9;&#x7126;&#x4E00;&#x5757;&#x5199;
//point&#x4E3A;&#x70B9;&#x51FB;&#x7684;&#x4F4D;&#x7F6E;
- (void)focusAtPoint:(CGPoint)point{
    CGSize size = self.view.bounds.size;
    CGPoint focusPoint = CGPointMake( point.y /size.height ,1-point.x/size.width );
    NSError *error;
    if ([self.device lockForConfiguration:&amp;error]) {
        //&#x5BF9;&#x7126;&#x6A21;&#x5F0F;&#x548C;&#x5BF9;&#x7126;&#x70B9;
        if ([self.device isFocusModeSupported:AVCaptureFocusModeAutoFocus]) {
            [self.device setFocusPointOfInterest:focusPoint];
            [self.device setFocusMode:AVCaptureFocusModeAutoFocus];
        }
        //&#x66DD;&#x5149;&#x6A21;&#x5F0F;&#x548C;&#x66DD;&#x5149;&#x70B9;
        if ([self.device isExposureModeSupported:AVCaptureExposureModeAutoExpose ]) {
            [self.device setExposurePointOfInterest:focusPoint];
            [self.device setExposureMode:AVCaptureExposureModeAutoExpose];
        }

        [self.device unlockForConfiguration];
        //&#x8BBE;&#x7F6E;&#x5BF9;&#x7126;&#x52A8;&#x753B;
        _focusView.center = point;
        _focusView.hidden = NO;
        [UIView animateWithDuration:0.3 animations:^{
            _focusView.transform = CGAffineTransformMakeScale(1.25, 1.25);
        }completion:^(BOOL finished) {
            [UIView animateWithDuration:0.5 animations:^{
                _focusView.transform = CGAffineTransformIdentity;
            } completion:^(BOOL finished) {
                _focusView.hidden = YES;
            }];
        }];
    }

}
</code></pre><h4 id="&#x9047;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x5751;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;"><a href="#&#x9047;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x5751;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;" class="headerlink" title="&#x9047;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x5751;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;"></a>&#x9047;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x5751;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;</h4><h5 id="1-&#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;"><a href="#1-&#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;" class="headerlink" title="1) &#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;"></a>1) &#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x7684;&#x5207;&#x6362;</h5><p>&#x3000;&#x3000;&#x524D;&#x540E;&#x503C;&#x4E0D;&#x80FD;&#x5207;&#x6362;&#xFF0C;&#x5404;&#x79CD;&#x5C1D;&#x8BD5;&#x627E;&#x4E86;&#x534A;&#x5929;&#x6CA1;&#x627E;&#x5230;&#x6709;&#x539F;&#x56E0;&#x3002;&#x540E;&#x6765;&#x53D1;&#x73B0;&#x6211;&#x5728;&#x8BBE;&#x7F6E;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x7684;&#x65F6;&#x5019;&#x8BBE;&#x7F6E;&#x4E3A;1080P [self.session canSetSessionPreset: AVCaptureSessionPreset1920x1080]   &#xFF0C;&#x524D;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x5E76;&#x4E0D;&#x652F;&#x6301;&#x8FD9;&#x4E48;&#x5927;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x4E0D;&#x80FD;&#x5207;&#x6362;&#x524D;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x3002;&#x6211;&#x9A8C;&#x8BC1;&#x4E86;&#x4E0B; &#x524D;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x6700;&#x9AD8;&#x652F;&#x6301;720P,720P&#x4EE5;&#x5185;&#x53EF;&#x81EA;&#x7531;&#x5207;&#x6362;&#x3002;&#x3000;&#x3000;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x524D;&#x540E;&#x7F6E;&#x6444;&#x50CF;&#x5934;&#x5207;&#x6362;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6839;&#x636E;&#x524D;&#x540E;&#x6444;&#x50CF;&#x5934;&#x6765;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x5728;&#x8D58;&#x8FF0;&#x3002;</p>
<h5 id="2&#xFF09;&#x7126;&#x70B9;&#x4F4D;&#x7F6E;"><a href="#2&#xFF09;&#x7126;&#x70B9;&#x4F4D;&#x7F6E;" class="headerlink" title="2&#xFF09;&#x7126;&#x70B9;&#x4F4D;&#x7F6E;"></a>2&#xFF09;&#x7126;&#x70B9;&#x4F4D;&#x7F6E;</h5><p>&#x3000;&#x3000;CGPoint focusPoint = CGPointMake( point.y /size.height ,1-point.x/size.width );<br>setExposurePointOfInterest&#xFF1A;focusPoint &#x51FD;&#x6570;&#x540E;&#x9762;Point&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;&#x53D6;&#x666F;&#x6846;&#x5DE6;&#x4E0A;&#x89D2;&#xFF08;0&#xFF0C;0&#xFF09;&#x5230;&#x53D6;&#x666F;&#x6846;&#x53F3;&#x4E0B;&#x89D2;&#xFF08;1&#xFF0C;1&#xFF09;&#x4E4B;&#x95F4;&#x3002;&#x5B98;&#x65B9;&#x662F;&#x8FD9;&#x4E48;&#x5199;&#x7684;&#xFF1A;<br>&#x3000;&#x3000;The value of this property is a CGPoint that determines the receiver&#x2019;s focus point of interest, if it has one. A value of (0,0) indicates that the camera should focus on the top left corner of the image, while a value of (1,1) indicates that it should focus on the bottom right. The default value is (0.5,0.5).<br>&#x3000;&#x3000;&#x6211;&#x4E5F;&#x8BD5;&#x4E86;&#x6309;&#x8FD9;&#x4E2A;&#x6765;&#x4F46;&#x4F4D;&#x7F6E;&#x5C31;&#x662F;&#x4E0D;&#x5BF9;&#xFF0C;&#x53EA;&#x80FD;&#x6309;&#x4E0A;&#x9762;&#x7684;&#x5199;&#x6CD5;&#x624D;&#x53EF;&#x4EE5;&#x3002;&#x524D;&#x9762;&#x662F;&#x70B9;&#x51FB;&#x4F4D;&#x7F6E;&#x7684;y/PreviewLayer&#x7684;&#x9AD8;&#x5EA6;&#xFF0C;&#x540E;&#x9762;&#x662F;1-&#x70B9;&#x51FB;&#x4F4D;&#x7F6E;&#x7684;x/PreviewLayer&#x7684;&#x5BBD;&#x5EA6;</p>
<h5 id="3&#xFF09;&#x5BF9;&#x7126;&#x548C;&#x66DD;&#x5149;"><a href="#3&#xFF09;&#x5BF9;&#x7126;&#x548C;&#x66DD;&#x5149;" class="headerlink" title="3&#xFF09;&#x5BF9;&#x7126;&#x548C;&#x66DD;&#x5149;"></a>3&#xFF09;&#x5BF9;&#x7126;&#x548C;&#x66DD;&#x5149;</h5><p>&#x3000;&#x3000;&#x6211;&#x5728;&#x8BBE;&#x7F6E;&#x5BF9;&#x7126;&#x662F; &#x5148;&#x8BBE;&#x7F6E;&#x4E86;&#x6A21;&#x5F0F;setFocusMode&#xFF0C;&#x540E;&#x8BBE;&#x7F6E;&#x5BF9;&#x7126;&#x4F4D;&#x7F6E;&#xFF0C;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x5F88;&#x5947;&#x602A;&#x7684;&#x73B0;&#x8C61;&#xFF0C;&#x5BF9;&#x7126;&#x4F4D;&#x7F6E;&#x662F;&#x4F60;&#x4E0A;&#x6B21;&#x70B9;&#x51FB;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x6240;&#x4EE5;&#x4E00;&#x5B9A;&#x8981;&#x5148;&#x8BBE;&#x7F6E;&#x4F4D;&#x7F6E;&#xFF0C;&#x518D;&#x8BBE;&#x7F6E;&#x5BF9;&#x7126;&#x6A21;&#x5F0F;&#x3002;<br>&#x3000;&#x3000;&#x66DD;&#x5149;&#x540C;&#x4E0A;</p>
<h4 id="&#x5199;&#x5728;&#x6700;&#x540E;"><a href="#&#x5199;&#x5728;&#x6700;&#x540E;" class="headerlink" title="&#x5199;&#x5728;&#x6700;&#x540E;"></a>&#x5199;&#x5728;&#x6700;&#x540E;</h4><p>&#x3000;&#x3000;&#x9644;&#x4E0A; <a href="https://github.com/nanshanyi/photographDemo" target="_blank" rel="external">demo</a><br>&#x3000;&#x3000;&#x5E38;&#x7528;&#x5230;&#x7684;&#x57FA;&#x672C;&#x5C31;&#x8FD9;&#x4E48;&#x591A;&#xFF0C;&#x5199;&#x7684;&#x5E76;&#x4E0D;&#x5B8C;&#x5584;&#xFF0C;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x5BF9;&#x7684;&#xFF0C;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x6279;&#x8BC4;&#x6307;&#x6B63;&#xFF0C;&#x5171;&#x540C;&#x5B66;&#x4E60;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[3DTouch应用详解]]></title>
      <url>http://nanshanyi.github.io/2016/05/03/3dtouch/</url>
      <content type="html"><![CDATA[<p>3D touch&#x4E5F;&#x51FA;&#x4E86;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#x4E86;&#xFF0C;&#x8FD9;&#x6B21;&#x82B1;&#x65F6;&#x95F4;&#x597D;&#x597D;&#x7814;&#x7A76;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x628A;&#x7ECF;&#x9A8C;&#x4E0E;&#x5927;&#x5BB6;&#x5206;&#x4EAB;&#x4E00;&#x4E0B;</p>
<h4 id="&#x4E3B;&#x754C;&#x9762;&#x91CD;&#x6309;APP&#x56FE;&#x6807;&#xFF0C;&#x5F39;&#x51FA;Touch&#x83DC;&#x5355;"><a href="#&#x4E3B;&#x754C;&#x9762;&#x91CD;&#x6309;APP&#x56FE;&#x6807;&#xFF0C;&#x5F39;&#x51FA;Touch&#x83DC;&#x5355;" class="headerlink" title="&#x4E3B;&#x754C;&#x9762;&#x91CD;&#x6309;APP&#x56FE;&#x6807;&#xFF0C;&#x5F39;&#x51FA;Touch&#x83DC;&#x5355;"></a>&#x4E3B;&#x754C;&#x9762;&#x91CD;&#x6309;APP&#x56FE;&#x6807;&#xFF0C;&#x5F39;&#x51FA;Touch&#x83DC;&#x5355;</h4><p>&#x3000;&#x9759;&#x6001;&#x5FEB;&#x901F;&#x9009;&#x9879;<br>&#x3000;&#x3000;&#x3000;(iOS&#x6570;&#x7EC4;)&#x7ED9;APP&#x6307;&#x5B9A;&#x9759;&#x6001;&#x4E3B;&#x5C4F;&#x5E55;&#x7684;&#x5FEB;&#x901F;&#x9009;&#x9879;&#xFF0C;&#x8FD9;&#x4E2A;&#x952E;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B57;&#x5178;&#x5305;&#x542B;&#x5173;&#x4E8E;&#x4E00;&#x4E2A;&#x5FEB;&#x901F;&#x9009;&#x9879;&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x9759;&#x6001;&#x5FEB;&#x901F;&#x9009;&#x9879;&#x7ED9;&#x4F60;&#x7684;APP&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x6570;&#x7EC4;&#x3002;<br><img src="/2016/05/03/3dtouch/966908-a293ac389bddf444.png" alt=""><br>&#x3000;UIApplicationShortcutItems (iOS&#x6570;&#x7EC4;)&#x7ED9;APP&#x6307;&#x5B9A;&#x9759;&#x6001;&#x4E3B;&#x5C4F;&#x5E55;&#x7684;&#x5FEB;&#x901F;&#x9009;&#x9879;&#xFF0C;&#x8FD9;&#x4E2A;&#x952E;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B57;&#x5178;&#x5305;&#x542B;&#x5173;&#x4E8E;&#x4E00;&#x4E2A;&#x5FEB;&#x901F;&#x9009;&#x9879;&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x9759;&#x6001;&#x5FEB;&#x901F;&#x9009;&#x9879;&#x7ED9;&#x4F60;&#x7684;APP&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x6570;&#x7EC4;&#x3002;<br><a id="more"></a><br>&#x9759;&#x6001;&#x5B9A;&#x4E49;&#x5FEB;&#x901F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x7528;&#x7684;key:<br>UIApplicationShortcutItemType (&#x5FC5;&#x987B;&#x4F7F;&#x7528;) &#x7528;&#x6765;&#x533A;&#x5206;&#x4E0E;&#x5176;&#x4ED6;&#x5FEB;&#x901F;&#x9009;&#x9879;&#x7684;&#x5206;&#x7C7B;<br>UIApplicationShortcutItemTitle (&#x5FC5;&#x987B;&#x4F7F;&#x7528;) &#x5FEB;&#x901F;&#x9009;&#x9879;&#x663E;&#x793A;&#x7684;&#x6807;&#x9898;<br>UIApplicationShortcutItemSubtitle &#x5FEB;&#x901F;&#x9009;&#x9879;&#x663E;&#x793A;&#x7684;&#x5B50;&#x6807;&#x9898;<br>UIApplicationShortcutItemIconType &#x56FE;&#x7247;&#x7C7B;&#x578B;&#x7531;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#xFF08; iOS9.1&#x4E4B;&#x540E;&#x65B0;&#x6DFB;&#x52A0;&#x4E86;&#x8BB8;&#x591A;&#x56FE;&#x7247;&#x7C7B;&#x578B;&#xFF09;<br>UIApplicationShortcutItemIconFile &#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x56FE;&#x6807;<br>UIApplicationShortcutItemUserInfo &#x9644;&#x52A0;&#x4FE1;&#x606F;</p>
<h4 id="&#x52A8;&#x6001;&#x5FEB;&#x901F;&#x9009;&#x9879;"><a href="#&#x52A8;&#x6001;&#x5FEB;&#x901F;&#x9009;&#x9879;" class="headerlink" title="&#x52A8;&#x6001;&#x5FEB;&#x901F;&#x9009;&#x9879;"></a>&#x52A8;&#x6001;&#x5FEB;&#x901F;&#x9009;&#x9879;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {</span><br><span class="line">UIApplicationShortcutItem * item = [[UIApplicationShortcutItem alloc]initWithType:@&quot;two&quot; localizedTitle:@&quot;&#x641C;&#x7D22;&quot; localizedSubtitle:@&quot;&#x4E00;&#x6B65;&#x5230;&#x8FBE;&#x6307;&#x5B9A;&#x5730;&#x70B9;&quot; icon:[UIApplicationShortcutIcon iconWithType:UIApplicationShortcutIconTypeSearch] userInfo:nil];</span><br><span class="line">UIApplicationShortcutItem * item1 = [[UIApplicationShortcutItem alloc]initWithType:@&quot;three&quot; localizedTitle:@&quot;&#x9644;&#x8FD1;&quot; localizedSubtitle:@&quot;&#x597D;&#x5403;&#x7684;&quot; icon:[UIApplicationShortcutIcon iconWithType:UIApplicationShortcutIconTypeMarkLocation] userInfo:nil];</span><br><span class="line">[UIApplication sharedApplication].shortcutItems = @[item,item1];</span><br></pre></td></tr></table></figure>
<p><img src="/2016/05/03/3dtouch/966908-b0ccf43482e4f83d.png" alt=""></p>
<h4 id="&#x9009;&#x62E9;item&#x540E;&#x89E6;&#x53D1;&#x7684;&#x65B9;&#x6CD5;"><a href="#&#x9009;&#x62E9;item&#x540E;&#x89E6;&#x53D1;&#x7684;&#x65B9;&#x6CD5;" class="headerlink" title="&#x9009;&#x62E9;item&#x540E;&#x89E6;&#x53D1;&#x7684;&#x65B9;&#x6CD5;"></a>&#x9009;&#x62E9;item&#x540E;&#x89E6;&#x53D1;&#x7684;&#x65B9;&#x6CD5;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> - (void)application:(UIApplication *)application performActionForShortcutItem:(nonnull     UIApplicationShortcutItem *)shortcutItem completionHandler:(nonnull void   (^)(BOOL))completionHandler{</span><br><span class="line">&#x3000;&#x3000;//&#x901A;&#x8FC7;shortcutItem.type&#x6765;&#x5224;&#x65AD;&#x70B9;&#x51FB;&#x7684;&#x662F;&#x54EA;&#x4E00;&#x4E2A;item&#xFF0C;&#x6765;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;</span><br><span class="line">  if ([shortcutItem.type isEqualToString:@&quot;one&quot;]) {</span><br><span class="line">        UITabBarController *mytab = (UITabBarController*)self.window.rootViewController;</span><br><span class="line">        mytab.selectedIndex = 0;</span><br><span class="line">    }else if ([shortcutItem.type isEqualToString:@&quot;two&quot;]){</span><br><span class="line">        SearchVC *searchVC = [[SearchVC alloc]init];</span><br><span class="line">        UITabBarController *mytab = (UITabBarController*)self.window.rootViewController;</span><br><span class="line">        UINavigationController *myNAV = [mytab.viewControllers firstObject];</span><br><span class="line">      [myNAV pushViewController:searchVC animated:YES];</span><br><span class="line">// [self.window.rootViewController presentViewController:searchVC animated:YES completion:nil];</span><br><span class="line">  }else{</span><br><span class="line">      FPHNearbyVC *vc = [[FPHNearbyVC alloc] init];</span><br><span class="line">      UITabBarController *mytab = (UITabBarController*)self.window.rootViewController;</span><br><span class="line">      UINavigationController *myNAV = [mytab.viewControllers firstObject];</span><br><span class="line">      vc.hidesBottomBarWhenPushed = YES;</span><br><span class="line">       [myNAV pushViewController:vc animated:YES];</span><br><span class="line">     }</span><br><span class="line">     completionHandler(YES);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="APP&#x5185;&#x90E8;peek&#x548C;pop&#x7684;&#x4F7F;&#x7528;&#xFF08;&#x4EE5;tableView&#x4E2D;&#x7684;&#x4F7F;&#x7528;&#x4E3A;&#x4F8B;&#xFF09;"><a href="#APP&#x5185;&#x90E8;peek&#x548C;pop&#x7684;&#x4F7F;&#x7528;&#xFF08;&#x4EE5;tableView&#x4E2D;&#x7684;&#x4F7F;&#x7528;&#x4E3A;&#x4F8B;&#xFF09;" class="headerlink" title="APP&#x5185;&#x90E8;peek&#x548C;pop&#x7684;&#x4F7F;&#x7528;&#xFF08;&#x4EE5;tableView&#x4E2D;&#x7684;&#x4F7F;&#x7528;&#x4E3A;&#x4F8B;&#xFF09;"></a>APP&#x5185;&#x90E8;peek&#x548C;pop&#x7684;&#x4F7F;&#x7528;&#xFF08;&#x4EE5;tableView&#x4E2D;&#x7684;&#x4F7F;&#x7528;&#x4E3A;&#x4F8B;&#xFF09;</h4><p>&#x3000;&#x3000;&#x9996;&#x5148;&#x9075;&#x5B88;&#x534F;&#x8BAE;UIViewControllerPreviewingDelegate<br>&#x3000;&#x3000;&#x68C0;&#x6D4B;&#x662F;&#x5426;&#x6709;3Dtouch&#xFF1B;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (void)check3DTouch{</span><br><span class="line">if (self.traitCollection.forceTouchCapability == UIForceTouchCapabilityAvailable)</span><br><span class="line">{</span><br><span class="line">   NSLog(@&quot;3D Touch &#x5F00;&#x542F;&quot;);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">   else{</span><br><span class="line"></span><br><span class="line">      }</span><br><span class="line">  }</span><br></pre></td></tr></table></figure></p>
<p>&#x3000;&#x3000;&#x4E0B;&#x9762;&#x6765;&#x5B9E;&#x73B0;&#x76F8;&#x5E94;&#x7684;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//peek&#x7684;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;&#xFF0C;&#x8F7B;&#x6309;&#x5373;&#x53EF;&#x89E6;&#x53D1;&#x5F39;&#x51FA;vc</span><br><span class="line"> - (UIViewController *)previewingContext:(id &lt;UIViewControllerPreviewing&gt;)previewingContext viewControllerForLocation:(CGPoint)location{</span><br><span class="line">     NSIndexPath *indexPath = [_tableView indexPathForCell:(UITableViewCell* )[previewingContext sourceView]];</span><br><span class="line">//&#x901A;&#x8FC7;[previewingContext sourceView]&#x62FF;&#x5230;&#x5BF9;&#x5E94;&#x7684;cell&#xFF1B;&#x3000;&#x3000;</span><br><span class="line">  NewVC *vc = [[FPHNewHouseDetailVC alloc] init];</span><br><span class="line">  newModel *model= [_tableView objectAtIndex:indexPath.row];</span><br><span class="line">  vc.pid = house.id;</span><br><span class="line"></span><br><span class="line">  NSLog(@&quot;%@&quot;,location);</span><br><span class="line">  return vc;</span><br><span class="line">   }</span><br><span class="line">//pop&#x7684;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x6B64;&#x5904;&#x53EF;&#x5BF9;&#x5C06;&#x8981;&#x8FDB;&#x5165;&#x7684;vc&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#x9690;&#x85CF;tabBar&#xFF1B;</span><br><span class="line"> - (void)previewingContext:(id &lt;UIViewControllerPreviewing&gt;)previewingContext commitViewController:(UIViewController *)viewControllerToCommit</span><br><span class="line"> {</span><br><span class="line">     viewControllerToCommit.hidesBottomBarWhenPushed = YES;</span><br><span class="line">    [self showViewController:viewControllerToCommit sender:self];</span><br><span class="line"> }</span><br></pre></td></tr></table></figure></p>
<p> <strong>&#x6CE8;&#x610F;&#xFF1A;</strong>tableView&#x5728;<br>&#x3000;&#x3000;&#x3000;&#x3000;- (UITableViewCell<em>)tableView:(UITableView </em>)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath<br>&#x3000;&#x3000;&#x65B9;&#x6CD5;&#x4E2D;&#x4E00;&#x5B9A;&#x8981;&#x5BF9;&#x6BCF;&#x4E2A;cell&#x8FDB;&#x884C;&#x6CE8;&#x518C;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;<br>&#x3000;&#x3000;[self registerForPreviewingWithDelegate:self sourceView:cell];</p>
<h4 id="&#x9884;&#x89C8;&#x65F6;&#x5E95;&#x90E8;&#x83DC;&#x5355;&#x7684;&#x6DFB;&#x52A0;"><a href="#&#x9884;&#x89C8;&#x65F6;&#x5E95;&#x90E8;&#x83DC;&#x5355;&#x7684;&#x6DFB;&#x52A0;" class="headerlink" title="&#x9884;&#x89C8;&#x65F6;&#x5E95;&#x90E8;&#x83DC;&#x5355;&#x7684;&#x6DFB;&#x52A0;"></a>&#x9884;&#x89C8;&#x65F6;&#x5E95;&#x90E8;&#x83DC;&#x5355;&#x7684;&#x6DFB;&#x52A0;</h4><p>&#x5728;&#x8981;&#x9884;&#x89C8;&#x7684;VC&#x4E2D;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-(NSArray&lt;id&lt;UIPreviewActionItem&gt;&gt; *)previewActionItems</span><br><span class="line">{</span><br><span class="line">UIPreviewAction * action1 = [UIPreviewAction actionWithTitle:@&quot;&#x6807;&#x9898;1&quot; style:1 handler:^(UIPreviewAction * _Nonnull action, UIViewController * _Nonnull previewViewController) {</span><br><span class="line">    NSLog(@&quot;&#x6807;&#x9898;1&quot;);</span><br><span class="line"> }];</span><br><span class="line"></span><br><span class="line">UIPreviewAction * action2 = [UIPreviewAction actionWithTitle:@&quot;&#x6807;&#x9898;2&quot; style:0 handler:^(UIPreviewAction * _Nonnull action, UIViewController * _Nonnull previewViewController) {</span><br><span class="line">    NSLog(@&quot;&#x6807;&#x9898;2&quot;);</span><br><span class="line"></span><br><span class="line"> }];</span><br><span class="line">UIPreviewAction * action3 = [UIPreviewAction actionWithTitle:@&quot;&#x6807;&#x9898;3&quot; style:2 handler:^(UIPreviewAction * _Nonnull action, UIViewController * _Nonnull previewViewController) {</span><br><span class="line">NSLog(@&quot;&#x6807;&#x9898;3&quot;);</span><br><span class="line"> }];</span><br><span class="line"></span><br><span class="line">NSArray * actions = @[action1,action2,action3];</span><br><span class="line"></span><br><span class="line">return actions;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>&#x3000;&#x3000;&#x3000;&#x3000;block&#x91CC;&#x9762;&#x76F4;&#x63A5;&#x5199;&#x70B9;&#x51FB;&#x540E;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x64CD;&#x4F5C;<br>&#x6700;&#x7EC8;&#x6548;&#x679C;&#xFF1A;<br><img src="/2016/05/03/3dtouch/966908-976af00f57dd4439.png" alt=""><br> &#x3000;&#x3000;&#x6682;&#x65F6;&#x5C31;&#x5199;&#x8FD9;&#x4E48;&#x591A;&#xFF0C;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x5BF9;&#x7684;&#x5730;&#x65B9;&#x8BF7;&#x5927;&#x5BB6;&#x6307;&#x6559;&#xFF0C;&#x5927;&#x5BB6;&#x4E92;&#x76F8;&#x5B66;&#x4E60;&#x3002;</p>
]]></content>
    </entry>
    
  
  
</search>
